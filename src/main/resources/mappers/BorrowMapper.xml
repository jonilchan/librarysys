<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdufe.libsys.mapper.BorrowMapper">
  <resultMap id="BaseResultMap" type="com.gdufe.libsys.entity.Borrow">
    <id column="borrow_id" jdbcType="INTEGER" property="borrowId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="reader_id" jdbcType="VARCHAR" property="readerId" />
    <result column="borrow_time" jdbcType="TIMESTAMP" property="borrowTime" />
    <result column="return_time" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="fine" jdbcType="INTEGER" property="fine" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="renew" jdbcType="INTEGER" property="renew" />
  </resultMap>
  <sql id="Base_Column_List">
    borrow_id, book_id, reader_id, borrow_time, return_time, operator, fine, status, 
    renew
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrow
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from borrow
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gdufe.libsys.entity.Borrow">
    insert into borrow (borrow_id, book_id, reader_id, 
      borrow_time, return_time, operator, 
      fine, status, renew
      )
    values (#{borrowId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{readerId,jdbcType=VARCHAR}, 
      #{borrowTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, 
      #{fine,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{renew,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gdufe.libsys.entity.Borrow">
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="borrowId != null">
        borrow_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="readerId != null">
        reader_id,
      </if>
      <if test="borrowTime != null">
        borrow_time,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="fine != null">
        fine,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="renew != null">
        renew,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="borrowId != null">
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null">
        #{readerId,jdbcType=VARCHAR},
      </if>
      <if test="borrowTime != null">
        #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="renew != null">
        #{renew,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gdufe.libsys.entity.Borrow">
    update borrow
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="readerId != null">
        reader_id = #{readerId,jdbcType=VARCHAR},
      </if>
      <if test="borrowTime != null">
        borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="renew != null">
        renew = #{renew,jdbcType=INTEGER},
      </if>
    </set>
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gdufe.libsys.entity.Borrow">
    update borrow
    set book_id = #{bookId,jdbcType=INTEGER},
      reader_id = #{readerId,jdbcType=VARCHAR},
      borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      fine = #{fine,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      renew = #{renew,jdbcType=INTEGER}
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>

  <!-- 通过传入参数查询已借书籍 -->
  <select id="selectByParams" parameterType="com.gdufe.libsys.entity.Borrow" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from book_info
    <where>
      <if test="null !=isbn and isbn !=''">
        and isbn like concat('%',#{isbn},'%')
      </if>
      <if test="null !=bookName and bookName !=''">
        and book_name like concat('%',#{bookName},'%')
      </if>
      <if test="null !=author and author !=''">
        and author like concat('%',#{author},'%')
      </if>
        and reader_id=#{readerId}
    </where>
  </select>
</mapper>